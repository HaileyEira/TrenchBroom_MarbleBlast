//--- OBJECT WRITE BEGIN ---
new GuiControl(JoinGameInviteDlg) {
   profile = "GuiDefaultProfile";
   horizSizing = "width";
   vertSizing = "height";
   position = "0 0";
   extent = "640 480";
   minExtent = "8 8";
   visible = "1";
   noCursor = "1";
   
   new GuiAchievementPopupCtrl(JoinGameInviteFrame) {
         profile = "AchievementDlgProfile";
         horizSizing = "center";
         vertSizing = "top";
         position = "0 350";
         extent =   "627 136";
         //minExtent = "48 92";
         visible = "1";
         icon = "";
         wrap = "0";

       new GuiBitmapCtrl(JoinGameInviteFrameAvatar) {
          profile = "GuiDefaultProfile";
          horizSizing = "right";
          vertSizing = "bottom";
          position = "75 35";
          extent = "64 64";
          minExtent = "8 2";
          visible = "1";
          bitmap = "./xbox/demoLock";
          wrap = "0";
       };

       new GuiBitmapCtrl(JoinGameInviteFrameAvatarMask) {
          profile = "GuiDefaultProfile";
          horizSizing = "right";
          vertSizing = "bottom";
          position = "75 35";
          extent = "64 64";
          minExtent = "8 2";
          visible = "1";
          bitmap = "./xbox/circlemask";
          wrap = "0";
       };

       new GuiTextCtrl(JoinGameInviteTitle) 
       {
          profile = JoinGameInviteDlgProfile;
	       horizSizing = "right";
	       vertSizing = "bottom";
		  position = "80 39";
          extent = "500 80";
          minExtent = "8 8";
          visible = "1";
          text = "GUI TITLE GOES HERE";
       };
	};
   
};
//--- OBJECT WRITE END ---

function JoinGameInviteDlg::onWake(%this)
{
	enableGamepad();
	moveMap.push();
}

function JoinGameInviteDlg::show(%userId, %username, %avatar)
{
    if (!JoinGameInviteDlg.isShowing) {
        Canvas.pushDialog(JoinGameInviteDlg);
        JoinGameInviteDlg.isShowing = true;
    }
    if ($pref::Lobby::StreamerMode)
    {
        %username = getSubStr(%username, 0, 1) @ "...";
    }
    serverplay2d(HelpDingSfx);
    JoinGameInviteDlg.responded = false;
    JoinGameInviteDlg.userId = %userId;
    JoinGameInviteDlg.username = %username;
    JoinGameInviteDlg.animState = 0;
    JoinGameInviteFrame.setHeader("Join Request");
    JoinGameInviteTitle.setText(%username SPC "wants to join");
    cancel(JoinGameInviteDlg.closeSchedule);
    JoinGameInviteDlg.closeSchedule = JoinGameInviteDlg.schedule(5000, "close");
    cancel(JoinGameInviteDlg.animSchedule);
    JoinGameInviteDlg.animSchedule = JoinGameInviteDlg.schedule(1000, "animate");
    JoinGameInviteDlg.dlToken++;
    downloadAvatar(%userId, %avatar, JoinGameInviteDlg.dlToken);
}

function JoinGameInviteDlg::animate(%this)
{
    %this.animState = !%this.animState;
    if (%this.animState)
        JoinGameInviteTitle.setText("Press Y to accept");
    else
        JoinGameInviteTitle.setText(%this.username SPC "wants to join");
    %this.animSchedule = %this.schedule(1000, "animate");
}

function JoinGameInviteDlg::onY(%this)
{
    if (%this.responded) return;
    %this.responded = true;
    XBLiveRespondJoinRequest(%this.userId, 1);
    JoinGameInviteTitle.setText("Accepted join request");
    cancel(%this.animSchedule);
    cancel(%this.closeSchedule);
    %this.closeSchedule = %this.schedule(2000, "close");
}

function JoinGameInviteDlg::close(%this)
{
    cancel(%this.animSchedule);
    Canvas.popDialog(%this);
    %this.isShowing = false;
}

function downloadAvatar(%userId, %avatarHash, %token)
{
    JoinGameInviteFrameAvatar.setBitmap("");
    %baseURL = "https://cdn.discordapp.com";
    %basePath = %userId @ %avatarHash @ ".png";
    %downloadPath = "/avatars/" @ %userId @ "/" @ %avatarHash @ ".png";
    if (isObject(DiscordAvatarDownload))
        DiscordAvatarDownload.delete(); // Stop
    new HTTPObject(DiscordAvatarDownload);
    DiscordAvatarDownload.setDownloadPath("mem/" @ %basePath);
    DiscordAvatarDownload.token = %token;
    DiscordAvatarDownload.get(%baseURL, %downloadPath, "size=64");
}

function DiscordAvatarDownload::onDownload(%this, %path)
{
    if (%this.token == JoinGameInviteDlg.dlToken)
        JoinGameInviteFrameAvatar.setBitmap(%path);
}

function DiscordAvatarDownload::downloadFailed(%this, %path)
{
    %this.delete();
}

function DiscordAvatarDownload::onDisconnect(%this)
{
    %this.delete();
}

function getInviteDiscordUsername(%userId)
{
    echo("USER ID: " @ %userId);
    if (isObject(DiscordIUsernameRequest))
        DiscordIUsernameRequest.delete();
    new HTTPObject(DiscordIUsernameRequest);
    DiscordIUsernameRequest.get("https://openmbu.com", "/api/v1/discord/user/" @ %userId, "");
}

function DiscordIUsernameRequest::onLine(%this, %line)
{
    %resp = jsonParse(%line);
    if (%resp.code == 200)
    { 
        %this.success = true;

        %username = %resp.realname;
        if (%username !$= "")
        {
            if ($pref::Lobby::StreamerMode)
            {
                %username = getSubStr(%username, 0, 1) @ "...";
            }

            JoinGameInviteDlg.username = %username;
        }
    } 
    else
    {
        %this.success = false;
    }
    %resp.delete();
}

function DiscordIUsernameRequest::onDisconnect(%this)
{
    if (!%this.success) {
        echo("Failed to fetch discord display name!");
    }
    %this.delete();
}